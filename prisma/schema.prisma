generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Status {
  todo
  inProgress
  completed
}

model Todo {
  id            String   @id @default(uuid())
  title         String
  description   String
  status        Status   @default(todo) 
  completed     Boolean  @default(false)
  tags          String   @default("") 
  deadline      DateTime  // ✅ Now required
  reminder_time DateTime  // ✅ Now required
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}






model User {
  id             String    @id @default(uuid())
  email          String    @unique
  password       String?   // Password is optional for OAuth
  name           String?
  role           String    @default("user")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now())
  resetToken     String?  @unique
  resetTokenExpiry DateTime?
  accounts       Account[]
   todos Todo[]
   activityLogs   ActivityLog[]
 
}

model ActivityLog {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  action    String   
  timestamp DateTime @default(now())
}


model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?     
  token_type         String? 
  scope              String? 
  id_token           String? 
  session_state      String? 

  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  identifier        String
  token            String   @unique
  expires          DateTime

  @@unique([identifier, token])
}
